
        Namespace: A-H: (REAL 4) I-N: (INTEGER 4) O-Z: (REAL 4)
        procedure name = pzlacon
        symtree: infog2l  Ambig 0
        symbol infog2l (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: cone  Ambig 0
        symbol cone (COMPLEX 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: (complex 0.1e1_8 0.e0_8)

        symtree: altsgn  Ambig 0
        symbol altsgn (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: abs  Ambig 0
        symbol abs (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: abs

        symtree: block_cyclic_2d  Ambig 0
        symbol block_cyclic_2d (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: blacs_gridinfo  Ambig 0
        symbol blacs_gridinfo (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: ctxt_  Ambig 0
        symbol ctxt_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 2

        symtree: csrc_  Ambig 0
        symbol csrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 8

        symtree: dgebr2d  Ambig 0
        symbol dgebr2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: dcmplx  Ambig 0
        symbol dcmplx (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: dcmplx

        symtree: dble  Ambig 0
        symbol dble (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: dble

        symtree: czero  Ambig 0
        symbol czero (COMPLEX 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: (complex 0.e0_8 0.e0_8)

        symtree: descx  Ambig 0
        symbol descx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: descv  Ambig 0
        symbol descv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: dgebs2d  Ambig 0
        symbol dgebs2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: indxg2p  Ambig 0
        symbol indxg2p (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxg2p

        symtree: ictxt  Ambig 0
        symbol ictxt (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: est  Ambig 0
        symbol est (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: dlen_  Ambig 0
        symbol dlen_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: dtype_  Ambig 0
        symbol dtype_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: estold  Ambig 0
        symbol estold (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: i  Ambig 0
        symbol i (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: indxg2l  Ambig 0
        symbol indxg2l (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxg2l

        symtree: iivx  Ambig 0
        symbol iivx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: imaxrow  Ambig 0
        symbol imaxrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: indxl2g  Ambig 0
        symbol indxl2g (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxl2g

        symtree: pzmax1  Ambig 0
        symbol pzmax1 (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: nb_  Ambig 0
        symbol nb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 6

        symtree: myrow  Ambig 0
        symbol myrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: mod  Ambig 0
        symbol mod (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC FUNCTION IMPLICIT-TYPE)
        result: mod

        symtree: jump  Ambig 0
        symbol jump (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: ioffvx  Ambig 0
        symbol ioffvx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: iroff  Ambig 0
        symbol iroff (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: j  Ambig 0
        symbol j (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: ix  Ambig 0
        symbol ix (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: iv  Ambig 0
        symbol iv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: iter  Ambig 0
        symbol iter (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: itmax  Ambig 0
        symbol itmax (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 5

        symtree: ivxcol  Ambig 0
        symbol ivxcol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: ivxrow  Ambig 0
        symbol ivxrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jjvx  Ambig 0
        symbol jjvx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jlmax  Ambig 0
        symbol jlmax (COMPLEX 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jlast  Ambig 0
        symbol jlast (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: k  Ambig 0
        symbol k (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jx  Ambig 0
        symbol jx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: jv  Ambig 0
        symbol jv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: m_  Ambig 0
        symbol m_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 3

        symtree: kase  Ambig 0
        symbol kase (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: lld_  Ambig 0
        symbol lld_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: mb_  Ambig 0
        symbol mb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 5

        symtree: mycol  Ambig 0
        symbol mycol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: n_  Ambig 0
        symbol n_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 4

        symtree: n  Ambig 0
        symbol n (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: np  Ambig 0
        symbol np (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: nint  Ambig 0
        symbol nint (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC FUNCTION IMPLICIT-TYPE)
        result: nint

        symtree: pzlacon  Ambig 0
        symbol pzlacon (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SUBROUTINE)
        Formal arglist: n v iv jv descv x ix jx descx est kase

        symtree: pdzsum1  Ambig 0
        symbol pdzsum1 (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: one  Ambig 0
        symbol one (REAL 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.1e1_8

        symtree: numroc  Ambig 0
        symbol numroc (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: numroc

        symtree: nprow  Ambig 0
        symbol nprow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: npcol  Ambig 0
        symbol npcol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: pdlamch  Ambig 0
        symbol pdlamch (REAL 8)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: pdlamch

        symtree: pzelget  Ambig 0
        symbol pzelget (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: two  Ambig 0
        symbol two (REAL 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.2e1_8

        symtree: temp  Ambig 0
        symbol temp (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: rsrc_  Ambig 0
        symbol rsrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 7

        symtree: safmin  Ambig 0
        symbol safmin (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: zgebs2d  Ambig 0
        symbol zgebs2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: xmax  Ambig 0
        symbol xmax (COMPLEX 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: x  Ambig 0
        symbol x (COMPLEX 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: v  Ambig 0
        symbol v (COMPLEX 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: work  Ambig 0
        symbol work (COMPLEX 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION SAVE)
        Array spec:(1 AS_EXPLICIT 1 2 )

        symtree: zcopy  Ambig 0
        symbol zcopy (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: zgebr2d  Ambig 0
        symbol zgebr2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)


      ASSIGN ictxt descx(2)
      CALL blacs_gridinfo ((ictxt) (nprow) (npcol) (myrow) (mycol))
      CALL infog2l ((ix) (jx) (descx(FULL)) (nprow) (npcol) (myrow) (mycol) (iivx) (jjvx) (ivxrow) (ivxcol))
      IF (<> mycol ivxcol)
        RETURN 
      ENDIF
      ASSIGN iroff __mod_i4[[(((- ix 1)) (descx(5)))]]
      ASSIGN np numroc[[(((+ n iroff)) (descx(5)) (myrow) (ivxrow) (nprow))]]
      IF (= myrow ivxrow)
        ASSIGN np (- np iroff)
      ENDIF
      ASSIGN ioffvx (+ iivx (* (- jjvx 1) descx(9)))
      ASSIGN safmin pdlamch[[((ictxt) ('Safe minimum'))]]
      IF (= kase 0)
        DO i=ioffvx (- (+ ioffvx np) 1) 1
          ASSIGN x(i) __cmplx0_8_r8[[(((/ 0.1e1_8 __dble_i4[[((n))]])) ((arg not-present)))]]
10        CONTINUE
        END DO
        ASSIGN kase 1
        ASSIGN jump 1
        RETURN 
      ENDIF
      SELECT CASE jump
      CASE (1 1) 
        GOTO 20
      CASE (2 2) 
        GOTO 40
      CASE (3 3) 
        GOTO 70
      CASE (4 4) 
        GOTO 90
      CASE (5 5) 
        GOTO 120
      END SELECT
20    CONTINUE
      IF (= n 1)
        IF (= myrow ivxrow)
          ASSIGN v(ioffvx) x(ioffvx)
          ASSIGN est __abs_c8[[((v(ioffvx)))]]
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1) (ivxrow) (mycol))
        ENDIF
        GOTO 130
      ENDIF
      CALL pdzsum1 ((n) (est) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1) (ivxrow) (mycol))
        ENDIF
      ENDIF
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        IF (> __abs_c8[[((x(i)))]] safmin)
          ASSIGN x(i) (/ x(i) __cmplx0_8_r8[[((__abs_c8[[((x(i)))]]) ((arg not-present)))]])
        ELSE
          ASSIGN x(i) (complex 0.1e1_8 0.e0_8)
        ENDIF
30      CONTINUE
      END DO
      ASSIGN kase 2
      ASSIGN jump 2
      RETURN 
40    CONTINUE
      CALL pzmax1 ((n) (xmax) (j) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          ASSIGN work(1) xmax
          ASSIGN work(2) __cmplx0_8_r8[[((__dble_i4[[((j))]]) ((arg not-present)))]]
          CALL zgebs2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2))
        ELSE
          CALL zgebr2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2) (ivxrow) (mycol))
          ASSIGN xmax work(1)
          ASSIGN j __nint_4_8[[((__dble_c8[[((work(2)))]]))]]
        ENDIF
      ENDIF
      ASSIGN iter 2
50    CONTINUE
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        ASSIGN x(i) (complex 0.e0_8 0.e0_8)
60      CONTINUE
      END DO
      ASSIGN imaxrow indxg2p[[((j) (descx(5)) (myrow) (descx(7)) (nprow))]]
      IF (= myrow imaxrow)
        ASSIGN i indxg2l[[((j) (descx(5)) (myrow) (descx(7)) (nprow))]]
        ASSIGN x(i) (complex 0.1e1_8 0.e0_8)
      ENDIF
      ASSIGN kase 1
      ASSIGN jump 3
      RETURN 
70    CONTINUE
      CALL zcopy ((np) (x(ioffvx)) (1) (v(ioffvx)) (1))
      ASSIGN estold est
      CALL pdzsum1 ((n) (est) (v(FULL)) (iv) (jv) (descv(FULL)) (1))
      IF (AND (= descv(3) 1) (= n 1))
        IF (= myrow ivxrow)
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1) (ivxrow) (mycol))
        ENDIF
      ENDIF
      IF (<= est estold)
        GOTO 100
      ENDIF
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        IF (> __abs_c8[[((x(i)))]] safmin)
          ASSIGN x(i) (/ x(i) __cmplx0_8_r8[[((__abs_c8[[((x(i)))]]) ((arg not-present)))]])
        ELSE
          ASSIGN x(i) (complex 0.1e1_8 0.e0_8)
        ENDIF
80      CONTINUE
      END DO
      ASSIGN kase 2
      ASSIGN jump 4
      RETURN 
90    CONTINUE
      ASSIGN jlast j
      CALL pzmax1 ((n) (xmax) (j) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          ASSIGN work(1) xmax
          ASSIGN work(2) __cmplx0_8_r8[[((__dble_i4[[((j))]]) ((arg not-present)))]]
          CALL zgebs2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2))
        ELSE
          CALL zgebr2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2) (ivxrow) (mycol))
          ASSIGN xmax work(1)
          ASSIGN j __nint_4_8[[((__dble_c8[[((work(2)))]]))]]
        ENDIF
      ENDIF
      CALL pzelget (('Columnwise') (' ') (jlmax) (x(FULL)) (jlast) (jx) (descx(FULL)))
      IF (AND (<> __dble_c8[[((jlmax))]] __abs_r8[[((__dble_c8[[((xmax))]]))]]) (< iter 5))
        ASSIGN iter (+ iter 1)
        GOTO 50
      ENDIF
100   CONTINUE
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        ASSIGN k (+ (- indxl2g[[(((+ (- i ioffvx) iivx)) (descx(5)) (myrow) (descx(7)) (nprow))]] ix) 1)
        IF (= __mod_i4[[((k) (2))]] 0)
          ASSIGN altsgn -0.1e1_8
        ELSE
          ASSIGN altsgn 0.1e1_8
        ENDIF
        ASSIGN x(i) __cmplx0_8_r8[[(((* altsgn (+ 0.1e1_8 (/ __dble_i4[[(((- k 1)))]] __dble_i4[[(((- n 1)))]])))) ((arg not-present)))]]
110     CONTINUE
      END DO
      ASSIGN kase 1
      ASSIGN jump 5
      RETURN 
120   CONTINUE
      CALL pdzsum1 ((n) (temp) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (temp) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (temp) (1) (ivxrow) (mycol))
        ENDIF
      ENDIF
      ASSIGN temp (* 0.2e1_8 (/ temp __dble_i4[[(((* 3 n)))]]))
      IF (> temp est)
        CALL zcopy ((np) (x(ioffvx)) (1) (v(ioffvx)) (1))
        ASSIGN est temp
      ENDIF
130   CONTINUE
      ASSIGN kase 0
      RETURN 

