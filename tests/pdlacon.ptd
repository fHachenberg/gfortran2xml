
        Namespace: A-H: (REAL 4) I-N: (INTEGER 4) O-Z: (REAL 4)
        procedure name = pdlacon
        symtree: i  Ambig 0
        symbol i (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: block_cyclic_2d  Ambig 0
        symbol block_cyclic_2d (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: abs  Ambig 0
        symbol abs (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: abs

        symtree: blacs_gridinfo  Ambig 0
        symbol blacs_gridinfo (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: altsgn  Ambig 0
        symbol altsgn (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: descx  Ambig 0
        symbol descx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: csrc_  Ambig 0
        symbol csrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 8

        symtree: descv  Ambig 0
        symbol descv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: dble  Ambig 0
        symbol dble (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: dble

        symtree: ctxt_  Ambig 0
        symbol ctxt_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 2

        symtree: dcopy  Ambig 0
        symbol dcopy (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: dgebr2d  Ambig 0
        symbol dgebr2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: est  Ambig 0
        symbol est (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: dtype_  Ambig 0
        symbol dtype_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: dlen_  Ambig 0
        symbol dlen_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: dgebs2d  Ambig 0
        symbol dgebs2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: estold  Ambig 0
        symbol estold (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: indxl2g  Ambig 0
        symbol indxl2g (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxl2g

        symtree: ictxt  Ambig 0
        symbol ictxt (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: indxg2l  Ambig 0
        symbol indxg2l (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxg2l

        symtree: imaxrow  Ambig 0
        symbol imaxrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: iflag  Ambig 0
        symbol iflag (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: iivx  Ambig 0
        symbol iivx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: igsum2d  Ambig 0
        symbol igsum2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: indxg2p  Ambig 0
        symbol indxg2p (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxg2p

        symtree: mb_  Ambig 0
        symbol mb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 5

        symtree: iroff  Ambig 0
        symbol iroff (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: infog2l  Ambig 0
        symbol infog2l (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: ioffvx  Ambig 0
        symbol ioffvx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: ivxrow  Ambig 0
        symbol ivxrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: iter  Ambig 0
        symbol iter (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: isgn  Ambig 0
        symbol isgn (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: iv  Ambig 0
        symbol iv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: itmax  Ambig 0
        symbol itmax (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 5

        symtree: ivxcol  Ambig 0
        symbol ivxcol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: j  Ambig 0
        symbol j (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: ix  Ambig 0
        symbol ix (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: m_  Ambig 0
        symbol m_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 3

        symtree: k  Ambig 0
        symbol k (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jx  Ambig 0
        symbol jx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: jlast  Ambig 0
        symbol jlast (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jjvx  Ambig 0
        symbol jjvx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jlmax  Ambig 0
        symbol jlmax (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jump  Ambig 0
        symbol jump (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: jv  Ambig 0
        symbol jv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: lld_  Ambig 0
        symbol lld_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: kase  Ambig 0
        symbol kase (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: xmax  Ambig 0
        symbol xmax (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: nint  Ambig 0
        symbol nint (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: nint

        symtree: n  Ambig 0
        symbol n (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: mod  Ambig 0
        symbol mod (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: mod

        symtree: myrow  Ambig 0
        symbol myrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: mycol  Ambig 0
        symbol mycol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: nb_  Ambig 0
        symbol nb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 6

        symtree: n_  Ambig 0
        symbol n_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 4

        symtree: sign  Ambig 0
        symbol sign (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: sign

        symtree: pdamax  Ambig 0
        symbol pdamax (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: np  Ambig 0
        symbol np (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: npcol  Ambig 0
        symbol npcol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: one  Ambig 0
        symbol one (REAL 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.1e1_8

        symtree: numroc  Ambig 0
        symbol numroc (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: numroc

        symtree: nprow  Ambig 0
        symbol nprow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: pdasum  Ambig 0
        symbol pdasum (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pdlacon  Ambig 0
        symbol pdlacon (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SUBROUTINE)
        Formal arglist: n v iv jv descv x ix jx descx isgn est kase

        symtree: pdelget  Ambig 0
        symbol pdelget (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: rsrc_  Ambig 0
        symbol rsrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 7

        symtree: work  Ambig 0
        symbol work (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION SAVE)
        Array spec:(1 AS_EXPLICIT 1 2 )

        symtree: v  Ambig 0
        symbol v (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: two  Ambig 0
        symbol two (REAL 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.2e1_8

        symtree: temp  Ambig 0
        symbol temp (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SAVE)

        symtree: x  Ambig 0
        symbol x (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: zero  Ambig 0
        symbol zero (REAL 8)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.e0_8


      ASSIGN ictxt descx(2)
      CALL blacs_gridinfo ((ictxt) (nprow) (npcol) (myrow) (mycol))
      CALL infog2l ((ix) (jx) (descx(FULL)) (nprow) (npcol) (myrow) (mycol) (iivx) (jjvx) (ivxrow) (ivxcol))
      IF (<> mycol ivxcol)
        RETURN 
      ENDIF
      ASSIGN iroff __mod_i4[[(((- ix 1)) (descx(5)))]]
      ASSIGN np numroc[[(((+ n iroff)) (descx(5)) (myrow) (ivxrow) (nprow))]]
      IF (= myrow ivxrow)
        ASSIGN np (- np iroff)
      ENDIF
      ASSIGN ioffvx (+ iivx (* (- jjvx 1) descx(9)))
      IF (= kase 0)
        DO i=ioffvx (- (+ ioffvx np) 1) 1
          ASSIGN x(i) (/ 0.1e1_8 __dble_i4[[((n))]])
10        CONTINUE
        END DO
        ASSIGN kase 1
        ASSIGN jump 1
        RETURN 
      ENDIF
      SELECT CASE jump
      CASE (1 1) 
        GOTO 20
      CASE (2 2) 
        GOTO 40
      CASE (3 3) 
        GOTO 70
      CASE (4 4) 
        GOTO 110
      CASE (5 5) 
        GOTO 140
      END SELECT
20    CONTINUE
      IF (= n 1)
        IF (= myrow ivxrow)
          ASSIGN v(ioffvx) x(ioffvx)
          ASSIGN est __abs_r8[[((v(ioffvx)))]]
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1) (ivxrow) (mycol))
        ENDIF
        GOTO 150
      ENDIF
      CALL pdasum ((n) (est) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1) (ivxrow) (mycol))
        ENDIF
      ENDIF
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        ASSIGN x(i) __sign_r8[[((0.1e1_8) (x(i)))]]
        ASSIGN isgn(i) __nint_4_8[[((x(i)))]]
30      CONTINUE
      END DO
      ASSIGN kase 2
      ASSIGN jump 2
      RETURN 
40    CONTINUE
      CALL pdamax ((n) (xmax) (j) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          ASSIGN work(1) xmax
          ASSIGN work(2) __dble_i4[[((j))]]
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2) (ivxrow) (mycol))
          ASSIGN xmax work(1)
          ASSIGN j __nint_4_8[[((work(2)))]]
        ENDIF
      ENDIF
      ASSIGN iter 2
50    CONTINUE
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        ASSIGN x(i) 0.e0_8
60      CONTINUE
      END DO
      ASSIGN imaxrow indxg2p[[((j) (descx(5)) (myrow) (descx(7)) (nprow))]]
      IF (= myrow imaxrow)
        ASSIGN i indxg2l[[((j) (descx(5)) (myrow) (descx(7)) (nprow))]]
        ASSIGN x(i) 0.1e1_8
      ENDIF
      ASSIGN kase 1
      ASSIGN jump 3
      RETURN 
70    CONTINUE
      CALL dcopy ((np) (x(ioffvx)) (1) (v(ioffvx)) (1))
      ASSIGN estold est
      CALL pdasum ((n) (est) (v(FULL)) (iv) (jv) (descv(FULL)) (1))
      IF (AND (= descv(3) 1) (= n 1))
        IF (= myrow ivxrow)
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (est) (1) (ivxrow) (mycol))
        ENDIF
      ENDIF
      ASSIGN iflag 0
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        IF (<> __nint_4_8[[((__sign_r8[[((0.1e1_8) (x(i)))]]))]] isgn(i))
          ASSIGN iflag 1
          GOTO 90
        ENDIF
80      CONTINUE
      END DO
90    CONTINUE
      CALL igsum2d ((ictxt) ('C') (' ') (1) (1) (iflag) (1) (-1) (mycol))
      IF (OR (= iflag 0) (<= est estold))
        GOTO 120
      ENDIF
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        ASSIGN x(i) __sign_r8[[((0.1e1_8) (x(i)))]]
        ASSIGN isgn(i) __nint_4_8[[((x(i)))]]
100     CONTINUE
      END DO
      ASSIGN kase 2
      ASSIGN jump 4
      RETURN 
110   CONTINUE
      ASSIGN jlast j
      CALL pdamax ((n) (xmax) (j) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          ASSIGN work(1) xmax
          ASSIGN work(2) __dble_i4[[((j))]]
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (2) (1) (work(FULL)) (2) (ivxrow) (mycol))
          ASSIGN xmax work(1)
          ASSIGN j __nint_4_8[[((work(2)))]]
        ENDIF
      ENDIF
      CALL pdelget (('Columnwise') (' ') (jlmax) (x(FULL)) (jlast) (jx) (descx(FULL)))
      IF (AND (<> jlmax __abs_r8[[((xmax))]]) (< iter 5))
        ASSIGN iter (+ iter 1)
        GOTO 50
      ENDIF
120   CONTINUE
      DO i=ioffvx (- (+ ioffvx np) 1) 1
        ASSIGN k (+ (- indxl2g[[(((+ (- i ioffvx) iivx)) (descx(5)) (myrow) (descx(7)) (nprow))]] ix) 1)
        IF (= __mod_i4[[((k) (2))]] 0)
          ASSIGN altsgn -0.1e1_8
        ELSE
          ASSIGN altsgn 0.1e1_8
        ENDIF
        ASSIGN x(i) (* altsgn (+ 0.1e1_8 (/ __dble_i4[[(((- k 1)))]] __dble_i4[[(((- n 1)))]])))
130     CONTINUE
      END DO
      ASSIGN kase 1
      ASSIGN jump 5
      RETURN 
140   CONTINUE
      CALL pdasum ((n) (temp) (x(FULL)) (ix) (jx) (descx(FULL)) (1))
      IF (AND (= descx(3) 1) (= n 1))
        IF (= myrow ivxrow)
          CALL dgebs2d ((ictxt) ('Columnwise') (' ') (1) (1) (temp) (1))
        ELSE
          CALL dgebr2d ((ictxt) ('Columnwise') (' ') (1) (1) (temp) (1) (ivxrow) (mycol))
        ENDIF
      ENDIF
      ASSIGN temp (* 0.2e1_8 (/ temp __dble_i4[[(((* 3 n)))]]))
      IF (> temp est)
        CALL dcopy ((np) (x(ioffvx)) (1) (v(ioffvx)) (1))
        ASSIGN est temp
      ENDIF
150   CONTINUE
      ASSIGN kase 0
      RETURN 

