
        Namespace: A-H: (REAL 4) I-N: (INTEGER 4) O-Z: (REAL 4)
        procedure name = pcpocon
        symtree: lquery  Ambig 0
        symbol lquery (LOGICAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: aimag  Ambig 0
        symbol aimag (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: aimag

        symtree: abs  Ambig 0
        symbol abs (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: abs

        symtree: a  Ambig 0
        symbol a (COMPLEX 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: jv  Ambig 0
        symbol jv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: descx  Ambig 0
        symbol descx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION)
        Array spec:(1 AS_EXPLICIT 1 9 )

        symtree: descset  Ambig 0
        symbol descset (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: cgebs2d  Ambig 0
        symbol cgebs2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: cgebr2d  Ambig 0
        symbol cgebr2d (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: cabs1  Ambig 0
        symbol cabs1 (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS STATEMENT-PROC FUNCTION)
        value: (+ __abs_r4[[((__real_4_c4[[((zdum) ((arg not-present)))]]))]] __abs_r4[[((__aimag_c4[[((zdum))]]))]])
        result: cabs1
        Formal arglist: zdum

        symtree: block_cyclic_2d  Ambig 0
        symbol block_cyclic_2d (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: anorm  Ambig 0
        symbol anorm (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: ainvnm  Ambig 0
        symbol ainvnm (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: blacs_gridinfo  Ambig 0
        symbol blacs_gridinfo (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: cbtop  Ambig 0
        symbol cbtop (CHARACTER 1)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: colctop  Ambig 0
        symbol colctop (CHARACTER 1)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: chk1mat  Ambig 0
        symbol chk1mat (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: desca  Ambig 0
        symbol desca (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: ctxt_  Ambig 0
        symbol ctxt_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 2

        symtree: csrc_  Ambig 0
        symbol csrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 8

        symtree: descv  Ambig 0
        symbol descv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION)
        Array spec:(1 AS_EXPLICIT 1 9 )

        symtree: ipw  Ambig 0
        symbol ipw (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: indxg2p  Ambig 0
        symbol indxg2p (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: indxg2p

        symtree: dlen_  Ambig 0
        symbol dlen_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: ichar  Ambig 0
        symbol ichar (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: ichar

        symtree: iceil  Ambig 0
        symbol iceil (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: iceil

        symtree: ia  Ambig 0
        symbol ia (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: dtype_  Ambig 0
        symbol dtype_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: iacol  Ambig 0
        symbol iacol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: iarow  Ambig 0
        symbol iarow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: icoff  Ambig 0
        symbol icoff (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: idum2  Ambig 0
        symbol idum2 (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION)
        Array spec:(1 AS_EXPLICIT 1 3 )

        symtree: idum1  Ambig 0
        symbol idum1 (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION)
        Array spec:(1 AS_EXPLICIT 1 3 )

        symtree: ictxt  Ambig 0
        symbol ictxt (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: iia  Ambig 0
        symbol iia (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: ipnl  Ambig 0
        symbol ipnl (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: info  Ambig 0
        symbol info (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: infog2l  Ambig 0
        symbol infog2l (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: ipnu  Ambig 0
        symbol ipnu (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: ipv  Ambig 0
        symbol ipv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: ipx  Ambig 0
        symbol ipx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: ja  Ambig 0
        symbol ja (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: ix  Ambig 0
        symbol ix (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: iv  Ambig 0
        symbol iv (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: iroff  Ambig 0
        symbol iroff (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: ixx  Ambig 0
        symbol ixx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: jja  Ambig 0
        symbol jja (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: lld_  Ambig 0
        symbol lld_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: jx  Ambig 0
        symbol jx (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: kase  Ambig 0
        symbol kase (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: scale  Ambig 0
        symbol scale (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: mod  Ambig 0
        symbol mod (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: mod

        symtree: max  Ambig 0
        symbol max (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: max

        symtree: lsame  Ambig 0
        symbol lsame (LOGICAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: lsame

        symtree: lrwmin  Ambig 0
        symbol lrwmin (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: lrwork  Ambig 0
        symbol lrwork (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: lwmin  Ambig 0
        symbol lwmin (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: lwork  Ambig 0
        symbol lwork (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: m_  Ambig 0
        symbol m_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 3

        symtree: mb_  Ambig 0
        symbol mb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 5

        symtree: rsrc_  Ambig 0
        symbol rsrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 7

        symtree: pclacon  Ambig 0
        symbol pclacon (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: myrow  Ambig 0
        symbol myrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: mycol  Ambig 0
        symbol mycol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: npmod  Ambig 0
        symbol npmod (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: npcol  Ambig 0
        symbol npcol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: normin  Ambig 0
        symbol normin (CHARACTER 1)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: n  Ambig 0
        symbol n (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: nb_  Ambig 0
        symbol nb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 6

        symtree: n_  Ambig 0
        symbol n_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 4

        symtree: np  Ambig 0
        symbol np (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: pb_topset  Ambig 0
        symbol pb_topset (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: one  Ambig 0
        symbol one (REAL 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.1e1

        symtree: numroc  Ambig 0
        symbol numroc (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: numroc

        symtree: nqmod  Ambig 0
        symbol nqmod (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: nprow  Ambig 0
        symbol nprow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: nq  Ambig 0
        symbol nq (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: pb_topget  Ambig 0
        symbol pb_topget (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pcamax  Ambig 0
        symbol pcamax (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pchk1mat  Ambig 0
        symbol pchk1mat (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pclatrs  Ambig 0
        symbol pclatrs (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: rcond  Ambig 0
        symbol rcond (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: pslamch  Ambig 0
        symbol pslamch (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: pslamch

        symtree: pcpocon  Ambig 0
        symbol pcpocon (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SUBROUTINE)
        Formal arglist: uplo n a ia ja desca anorm rcond work lwork rwork lrwork info

        symtree: pcsrscl  Ambig 0
        symbol pcsrscl (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pxerbla  Ambig 0
        symbol pxerbla (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: real  Ambig 0
        symbol real (REAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: real

        symtree: rowctop  Ambig 0
        symbol rowctop (CHARACTER 1)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: rwork  Ambig 0
        symbol rwork (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: sl  Ambig 0
        symbol sl (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: su  Ambig 0
        symbol su (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: smlnum  Ambig 0
        symbol smlnum (REAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: zdum  Ambig 0
        symbol zdum (COMPLEX 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: upper  Ambig 0
        symbol upper (LOGICAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: uplo  Ambig 0
        symbol uplo (CHARACTER 1)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: work  Ambig 0
        symbol work (COMPLEX 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: wmax  Ambig 0
        symbol wmax (COMPLEX 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: zero  Ambig 0
        symbol zero (REAL 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 0.e0


      ASSIGN ictxt desca(2)
      CALL blacs_gridinfo ((ictxt) (nprow) (npcol) (myrow) (mycol))
      ASSIGN info 0
      IF (= nprow -1)
        ASSIGN info -602
      ELSE
        CALL chk1mat ((n) (2) (n) (2) (ia) (ja) (desca(FULL)) (6) (info))
        IF (= info 0)
          ASSIGN upper lsame[[((uplo) ('U'))]]
          ASSIGN iarow indxg2p[[((ia) (desca(5)) (myrow) (desca(7)) (nprow))]]
          ASSIGN iacol indxg2p[[((ja) (desca(6)) (mycol) (desca(8)) (npcol))]]
          ASSIGN npmod numroc[[(((+ n __mod_i4[[(((- ia 1)) (desca(5)))]])) (desca(5)) (myrow) (iarow) (nprow))]]
          ASSIGN nqmod numroc[[(((+ n __mod_i4[[(((- ja 1)) (desca(6)))]])) (desca(6)) (mycol) (iacol) (npcol))]]
          ASSIGN lwmin (+ (* 2 npmod) __max_i4[[((2) (__max_i4[[(((* desca(6) __max_i4[[((1) (iceil[[(((- nprow 1)) (npcol))]]))]])) ((+ nqmod (* desca(6) __max_i4[[((1) (iceil[[(((- npcol 1)) (nprow))]]))]]))))]]))]])
          ASSIGN work(1) __convert_r4_c4[[((_gfortran_float[[((lwmin))]]))]]
          ASSIGN lrwmin (* 2 nqmod)
          ASSIGN rwork(1) _gfortran_float[[((lrwmin))]]
          ASSIGN lquery (OR (= lwork -1) (= lrwork -1))
          IF (AND (NOT upper) (NOT lsame[[((uplo) ('L'))]]))
            ASSIGN info -1
          ELSE IF (< anorm 0.e0)
            ASSIGN info -7
          ELSE IF (AND (< lwork lwmin) (NOT lquery))
            ASSIGN info -10
          ELSE IF (AND (< lrwork lrwmin) (NOT lquery))
            ASSIGN info -12
          ENDIF
        ENDIF
        IF upper
          ASSIGN idum1(1) 85
        ELSE
          ASSIGN idum1(1) 76
        ENDIF
        ASSIGN idum2(1) 1
        IF (= lwork -1)
          ASSIGN idum1(2) -1
        ELSE
          ASSIGN idum1(2) 1
        ENDIF
        ASSIGN idum2(2) 10
        IF (= lrwork -1)
          ASSIGN idum1(3) -1
        ELSE
          ASSIGN idum1(3) 1
        ENDIF
        ASSIGN idum2(3) 12
        CALL pchk1mat ((n) (2) (n) (2) (ia) (ja) (desca(FULL)) (6) (3) (idum1(FULL)) (idum2(FULL)) (info))
      ENDIF
      IF (<> info 0)
        CALL pxerbla ((ictxt) ('PCPOCON') ((U- info)))
        RETURN 
      ELSE IF lquery
        RETURN 
      ENDIF
      ASSIGN rcond 0.e0
      IF (= n 0)
        ASSIGN rcond 0.1e1
        RETURN 
      ELSE IF (= anorm 0.e0)
        RETURN 
      ELSE IF (= n 1)
        ASSIGN rcond 0.1e1
        RETURN 
      ENDIF
      CALL pb_topget ((ictxt) ('Combine') ('Columnwise') (colctop))
      CALL pb_topget ((ictxt) ('Combine') ('Rowwise') (rowctop))
      CALL pb_topset ((ictxt) ('Combine') ('Columnwise') ('1-tree'))
      CALL pb_topset ((ictxt) ('Combine') ('Rowwise') ('1-tree'))
      ASSIGN smlnum pslamch[[((ictxt) ('Safe minimum'))]]
      ASSIGN iroff __mod_i4[[(((- ia 1)) (desca(5)))]]
      ASSIGN icoff __mod_i4[[(((- ja 1)) (desca(6)))]]
      CALL infog2l ((ia) (ja) (desca(FULL)) (nprow) (npcol) (myrow) (mycol) (iia) (jja) (iarow) (iacol))
      ASSIGN np numroc[[(((+ n iroff)) (desca(5)) (myrow) (iarow) (nprow))]]
      ASSIGN nq numroc[[(((+ n icoff)) (desca(6)) (mycol) (iacol) (npcol))]]
      ASSIGN iv (+ iroff 1)
      ASSIGN ix iv
      ASSIGN jv (+ icoff 1)
      ASSIGN jx jv
      ASSIGN ipx 1
      ASSIGN ipv (+ ipx np)
      ASSIGN ipw (+ ipv np)
      ASSIGN ipnl 1
      ASSIGN ipnu (+ ipnl nq)
      CALL descset ((descv(FULL)) ((+ n iroff)) (1) (desca(5)) (1) (iarow) (mycol) (ictxt) (__max_i4[[((1) (np))]]))
      CALL descset ((descx(FULL)) ((+ n iroff)) (1) (desca(5)) (1) (iarow) (mycol) (ictxt) (__max_i4[[((1) (np))]]))
      ASSIGN ainvnm 0.e0
      ASSIGN kase 0
      ASSIGN normin 'N'
10    CONTINUE
      CALL pclacon ((n) (work(ipv)) (iv) (jv) (descv(FULL)) (work(ipx)) (ix) (jx) (descx(FULL)) (ainvnm) (kase))
      IF (<> kase 0)
        IF upper
          ASSIGN descx(8) iacol
          CALL pclatrs (('Upper') ('Conjugate transpose') ('Non-unit') (normin) (n) (a(FULL)) (ia) (ja) (desca(FULL)) (work(ipx)) (ix) (jx) (descx(FULL)) (sl) (rwork(ipnl)) (work(ipw)))
          ASSIGN descx(8) mycol
          ASSIGN normin 'Y'
          ASSIGN descx(8) iacol
          CALL pclatrs (('Upper') ('No transpose') ('Non-unit') (normin) (n) (a(FULL)) (ia) (ja) (desca(FULL)) (work(ipx)) (ix) (jx) (descx(FULL)) (su) (rwork(ipnu)) (work(ipw)))
          ASSIGN descx(8) mycol
        ELSE
          ASSIGN descx(8) iacol
          CALL pclatrs (('Lower') ('No transpose') ('Non-unit') (normin) (n) (a(FULL)) (ia) (ja) (desca(FULL)) (work(ipx)) (ix) (jx) (descx(FULL)) (sl) (rwork(ipnl)) (work(ipw)))
          ASSIGN descx(8) mycol
          ASSIGN normin 'Y'
          ASSIGN descx(8) iacol
          CALL pclatrs (('Lower') ('Conjugate transpose') ('Non-unit') (normin) (n) (a(FULL)) (ia) (ja) (desca(FULL)) (work(ipx)) (ix) (jx) (descx(FULL)) (su) (rwork(ipnu)) (work(ipw)))
          ASSIGN descx(8) mycol
        ENDIF
        ASSIGN scale (* sl su)
        IF (<> scale 0.1e1)
          CALL pcamax ((n) (wmax) (ixx) (work(ipx)) (ix) (jx) (descx(FULL)) (1))
          IF (AND (= descx(3) 1) (= n 1))
            CALL pb_topget ((ictxt) ('Broadcast') ('Columnwise') (cbtop))
            IF (= myrow iarow)
              CALL cgebs2d ((ictxt) ('Column') (cbtop) (1) (1) (wmax) (1))
            ELSE
              CALL cgebr2d ((ictxt) ('Column') (cbtop) (1) (1) (wmax) (1) (iarow) (mycol))
            ENDIF
          ENDIF
          IF (OR (< scale (* cabs1[[((wmax))]] smlnum)) (= scale 0.e0))
            GOTO 20
          ENDIF
          CALL pcsrscl ((n) (scale) (work(ipx)) (ix) (jx) (descx(FULL)) (1))
        ENDIF
        GOTO 10
      ENDIF
      IF (<> ainvnm 0.e0)
        ASSIGN rcond (/ (/ 0.1e1 ainvnm) anorm)
      ENDIF
20    CONTINUE
      CALL pb_topset ((ictxt) ('Combine') ('Columnwise') (colctop))
      CALL pb_topset ((ictxt) ('Combine') ('Rowwise') (rowctop))
      RETURN 

