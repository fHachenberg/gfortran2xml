
        Namespace: A-H: (REAL 4) I-N: (INTEGER 4) O-Z: (REAL 4)
        procedure name = pdpotri
        symtree: pxerbla  Ambig 0
        symbol pxerbla (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: mb_  Ambig 0
        symbol mb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 5

        symtree: dtype_  Ambig 0
        symbol dtype_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: a  Ambig 0
        symbol a (REAL 8)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: csrc_  Ambig 0
        symbol csrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 8

        symtree: chk1mat  Ambig 0
        symbol chk1mat (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: blacs_gridinfo  Ambig 0
        symbol blacs_gridinfo (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: block_cyclic_2d  Ambig 0
        symbol block_cyclic_2d (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 1

        symtree: desca  Ambig 0
        symbol desca (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION DUMMY)
        Array spec:(1 AS_ASSUMED_SIZE 1 () )

        symtree: ctxt_  Ambig 0
        symbol ctxt_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 2

        symtree: dlen_  Ambig 0
        symbol dlen_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: idum1  Ambig 0
        symbol idum1 (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION)
        Array spec:(1 AS_EXPLICIT 1 1 )

        symtree: icoff  Ambig 0
        symbol icoff (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: ia  Ambig 0
        symbol ia (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: ichar  Ambig 0
        symbol ichar (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: ichar

        symtree: ictxt  Ambig 0
        symbol ictxt (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: idum2  Ambig 0
        symbol idum2 (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DIMENSION)
        Array spec:(1 AS_EXPLICIT 1 1 )

        symtree: lsame  Ambig 0
        symbol lsame (LOGICAL 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL FUNCTION)
        result: lsame

        symtree: iroff  Ambig 0
        symbol iroff (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: info  Ambig 0
        symbol info (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: ja  Ambig 0
        symbol ja (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: lld_  Ambig 0
        symbol lld_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 9

        symtree: m_  Ambig 0
        symbol m_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 3

        symtree: pchk1mat  Ambig 0
        symbol pchk1mat (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: mod  Ambig 0
        symbol mod (INTEGER 4)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC INTRINSIC FUNCTION IMPLICIT-TYPE)
        result: mod

        symtree: n_  Ambig 0
        symbol n_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 4

        symtree: mycol  Ambig 0
        symbol mycol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: myrow  Ambig 0
        symbol myrow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: n  Ambig 0
        symbol n (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)

        symtree: nb_  Ambig 0
        symbol nb_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 6

        symtree: npcol  Ambig 0
        symbol npcol (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: nprow  Ambig 0
        symbol nprow (INTEGER 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: pdtrtri  Ambig 0
        symbol pdtrtri (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pdlauum  Ambig 0
        symbol pdlauum (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS EXTERNAL-PROC EXTERNAL SUBROUTINE)

        symtree: pdpotri  Ambig 0
        symbol pdpotri (UNKNOWN 0)(PROCEDURE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC SUBROUTINE)
        Formal arglist: uplo n a ia ja desca info

        symtree: rsrc_  Ambig 0
        symbol rsrc_ (INTEGER 4)(PARAMETER UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)
        value: 7

        symtree: upper  Ambig 0
        symbol upper (LOGICAL 4)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC)

        symtree: uplo  Ambig 0
        symbol uplo (CHARACTER 1)(VARIABLE UNKNOWN-INTENT UNKNOWN-ACCESS UNKNOWN-PROC DUMMY)


      ASSIGN ictxt desca(2)
      CALL blacs_gridinfo ((ictxt) (nprow) (npcol) (myrow) (mycol))
      ASSIGN info 0
      IF (= nprow -1)
        ASSIGN info -602
      ELSE
        ASSIGN upper lsame[[((uplo) ('U'))]]
        CALL chk1mat ((n) (2) (n) (2) (ia) (ja) (desca(FULL)) (6) (info))
        IF (<> info 0)
          ASSIGN iroff __mod_i4[[(((- ia 1)) (desca(5)))]]
          ASSIGN icoff __mod_i4[[(((- ja 1)) (desca(6)))]]
          IF (AND (NOT upper) (NOT lsame[[((uplo) ('L'))]]))
            ASSIGN info -1
          ELSE IF (OR (<> iroff icoff) (<> iroff 0))
            ASSIGN info -5
          ELSE IF (<> desca(5) desca(6))
            ASSIGN info -606
          ENDIF
        ENDIF
        IF upper
          ASSIGN idum1(1) 85
        ELSE
          ASSIGN idum1(1) 76
        ENDIF
        ASSIGN idum2(1) 1
        CALL pchk1mat ((n) (2) (n) (2) (ia) (ja) (desca(FULL)) (6) (1) (idum1(FULL)) (idum2(FULL)) (info))
      ENDIF
      IF (<> info 0)
        CALL pxerbla ((ictxt) ('PDPOTRI') ((U- info)))
        RETURN 
      ENDIF
      IF (= n 0)
        RETURN 
      ENDIF
      CALL pdtrtri ((uplo) ('Non-unit') (n) (a(FULL)) (ia) (ja) (desca(FULL)) (info))
      IF (> info 0)
        RETURN 
      ENDIF
      CALL pdlauum ((uplo) (n) (a(FULL)) (ia) (ja) (desca(FULL)))
      RETURN 

